version: '3.8'

services:
  mcp-kanban-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: mcp-kanban-dev
    ports:
      - '3000:3000' # HTTP API
      - '3001:3001' # WebSocket
    volumes:
      - ./data:/app/data # Database persistence
      - ./logs:/app/logs # Log persistence
      - ./backups:/app/backups # Backup persistence
      - ./src:/app/src # Source code for development
      - ./dist:/app/dist # Built files
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MCP_KANBAN_DB_FOLDER_PATH=/app/data/db
      - LOG_LEVEL=debug
    command: npm run dev:server
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mcp-kanban-mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-kanban-mcp
    volumes:
      - ./data:/app/data # Shared database
      - ./logs:/app/logs # Shared logs
    environment:
      - NODE_ENV=production
      - MCP_KANBAN_DB_FOLDER_PATH=/app/data/db
      - LOG_LEVEL=info
    command: node dist/mcp/server.js
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'node', '-e', 'process.exit(0)']
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  mcp-kanban-cli:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: mcp-kanban-cli
    volumes:
      - ./data:/app/data # Shared database
      - ./logs:/app/logs # Shared logs
    environment:
      - NODE_ENV=development
      - MCP_KANBAN_DB_FOLDER_PATH=/app/data/db
      - LOG_LEVEL=info
    command: npm run dev:cli
    stdin_open: true
    tty: true
    depends_on:
      - mcp-kanban-dev

volumes:
  mcp-kanban-data:
    driver: local
  mcp-kanban-logs:
    driver: local
  mcp-kanban-backups:
    driver: local

networks:
  default:
    name: mcp-kanban-network
