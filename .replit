run = "npm run start:replit"
entrypoint = "src/index.ts"
modules = ["nodejs-18"]

[nix]
channel = "stable-22_11"

[env]
# Application configuration
NODE_ENV = "development"
PORT = "3000"
HOST = "0.0.0.0"

# Database configuration
DATABASE_URL = "file:./data/kanban.db"
DATABASE_MAX_CONNECTIONS = "10"

# Replit-specific settings
REPLIT_ENVIRONMENT = "true"
REPLIT_DB_URL = "./data/kanban.db"

# Performance optimizations
NODE_OPTIONS = "--max-old-space-size=1024"
UV_THREADPOOL_SIZE = "64"

# Feature flags
ENABLE_ANALYTICS = "true"
ENABLE_WEBSOCKETS = "true"
ENABLE_GIT_INTEGRATION = "false"
ENABLE_BACKUP_SCHEDULING = "true"

# Logging
LOG_LEVEL = "info"
LOG_FORMAT = "json"

# Rate limiting
RATE_LIMIT_WINDOW_MS = "900000"
RATE_LIMIT_MAX_REQUESTS = "1000"

# CORS settings for Replit
CORS_ORIGIN = "*"
CORS_METHODS = "GET,HEAD,PUT,PATCH,POST,DELETE"

[gitHubImport]
requiredFiles = [".replit", "replit.nix", "package.json"]

[languages]

[languages.typescript]
pattern = "**/{*.ts,*.js,*.tsx,*.jsx}"

[languages.typescript.languageServer]
start = "typescript-language-server --stdio"

[deployment]
run = ["sh", "-c", "npm run build && npm run start:production"]
deploymentTarget = "cloudrun"

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 3456
externalPort = 3456
description = "WebSocket server"

[objectStorage]
defaultBucketID = "mcp-kanban-data"

[secrets]
API_SECRET_KEY = "your-secret-key-here"
JWT_SECRET = "your-jwt-secret-here"

[debugger]
support = true

[packager]
language = "nodejs"

[packager.features]
packageSearch = true
guessImports = true
enabledForHosting = false

[unitTest]
language = "nodejs"

[hosting]
scheme = "https"
port = 80

# Development commands
[tasks]

[tasks.install]
runner = "bash"
args = ["-c", "npm install && npm run build"]

[tasks.dev]
runner = "bash"
args = ["-c", "npm run dev:replit"]

[tasks.start]
runner = "bash"
args = ["-c", "npm run start:replit"]

[tasks.build]
runner = "bash"
args = ["-c", "npm run build"]

[tasks.test]
runner = "bash"
args = ["-c", "npm test"]

[tasks.setup]
runner = "bash"
args = ["-c", "npm run setup:replit"]

[tasks.migrate]
runner = "bash"
args = ["-c", "npm run db:migrate"]

[tasks.seed]
runner = "bash"
args = ["-c", "npm run db:seed"]

[tasks.reset]
runner = "bash"
args = ["-c", "npm run db:reset && npm run db:seed"]

[startup]
cmds = ["npm install", "npm run build", "npm run db:migrate", "npm run db:seed"] 