# MCP Kanban Server - Isolated MCP Deployment
# Optimized for MCP protocol usage with minimal footprint

FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S mcp -u 1001

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=mcp:nodejs /app/dist ./dist
COPY --from=builder --chown=mcp:nodejs /app/package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Create necessary directories
RUN mkdir -p /app/data/db /app/logs /app/backups && \
    chown -R mcp:nodejs /app

# Switch to non-root user
USER mcp

# Expose MCP server port (stdio mode doesn't need port, but for HTTP mode)
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "process.exit(0)" || exit 1

# Default command (MCP stdio mode)
CMD ["node", "dist/mcp/server.js"]

# Alternative commands for different modes:
# HTTP mode: CMD ["node", "dist/server.js"]
# CLI mode: CMD ["node", "dist/cli/index.js"] 